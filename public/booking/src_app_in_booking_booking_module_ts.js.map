{"version":3,"sources":["./src/app/in/booking/booking-routing.module.ts","./src/app/in/booking/booking.component.ts","./src/app/in/booking/booking.component.html","./src/app/in/booking/booking.module.ts","./src/app/in/booking/edit/booking.edit.component.ts","./src/app/in/booking/edit/booking.edit.component.html","./src/app/in/booking/edit/components/booking.edit.customer/booking.edit.customer.component.ts","./src/app/in/booking/edit/components/booking.edit.customer/booking.edit.customer.component.html","./src/app/in/booking/edit/components/booking.edit.customer/booking.edit.customer.create.partner.dialog.html","./src/app/in/booking/edit/components/booking.edit.sojourn/booking.edit.sojourn.component.ts","./src/app/in/booking/edit/components/booking.edit.sojourn/booking.edit.sojourn.component.html","./src/app/in/booking/edit/components/booking.edit.sojourn/booking.edit.customer.create.contact.dialog.html"],"names":[],"mappings":"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","file":"src_app_in_booking_booking_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { BookingComponent } from './booking.component';\r\nimport { BookingEditComponent } from './edit/booking.edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: BookingComponent\r\n    },    \r\n    {\r\n        path: 'edit/:id',\r\n        component: BookingEditComponent\r\n    },\r\n    {\r\n        path: 'edit',\r\n        component: BookingEditComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BookingRoutingModule {}\r\n","import { Component, OnInit, AfterViewInit, ElementRef, QueryList, ViewChild, ViewChildren  } from '@angular/core';\nimport { AuthService, ApiService } from 'sb-shared-lib';\nimport { Router } from '@angular/router';\n\n\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { find, map, startWith, debounceTime } from 'rxjs/operators';\n\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n\n\n\n@Component({\n  selector: 'booking',\n  templateUrl: 'booking.component.html',\n  styleUrls: ['booking.component.scss']\n})\nexport class BookingComponent implements OnInit, AfterViewInit  {\n\n\n  constructor(\n              private auth: AuthService,\n              private api: ApiService,\n              private router: Router,\n              private dialog: MatDialog\n              ) {\n  }\n\n\n\n\n  public ngAfterViewInit() {\n\n  }\n\n  public ngOnInit() {\n    console.log('BookingComponent init');\n  }\n\n\n}","booking works","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedLibModule, AuthInterceptorService } from 'sb-shared-lib';\r\n\r\nimport { BookingRoutingModule } from './booking-routing.module';\r\n\r\nimport { BookingComponent } from './booking.component';\r\nimport { BookingEditComponent } from './edit/booking.edit.component';\r\n\r\n\r\nimport { BookingEditCustomerComponent } from './edit/components/booking.edit.customer/booking.edit.customer.component';\r\nimport { DialogCreatePartner } from './edit/components/booking.edit.customer/booking.edit.customer.component';\r\n\r\nimport { BookingEditSojournComponent } from './edit/components/booking.edit.sojourn/booking.edit.sojourn.component';\r\nimport { DialogCreateContact } from './edit/components/booking.edit.sojourn/booking.edit.sojourn.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedLibModule,\r\n    BookingRoutingModule\r\n  ],\r\n  declarations: [\r\n    BookingComponent, BookingEditComponent,\r\n    BookingEditCustomerComponent, DialogCreatePartner,\r\n    BookingEditSojournComponent, DialogCreateContact\r\n  ]\r\n})\r\nexport class AppInBookingModule { }\r\n","import { Component, OnInit, AfterViewInit, ChangeDetectorRef, ElementRef, QueryList, ViewChild, ViewChildren, NgZone  } from '@angular/core';\nimport { AuthService, ApiService } from 'sb-shared-lib';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Observable, BehaviorSubject, ReplaySubject } from 'rxjs';\nimport { find, map, startWith, debounceTime, switchMap } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'booking-edit',\n  templateUrl: 'booking.edit.component.html',\n  styleUrls: ['booking.edit.component.scss']\n})\nexport class BookingEditComponent implements OnInit, AfterViewInit  {\n\n  private booking: any;\n  public id: number;\n\n  public _bookingInput: ReplaySubject<any> = new ReplaySubject(1);\n  public _bookingOutput: ReplaySubject<any> = new ReplaySubject(1);\n\n  public showSbContainer: boolean;\n\n\n  constructor(\n              private auth: AuthService,\n              private api: ApiService,\n              private router: Router,\n              private dialog: MatDialog,\n              private route: ActivatedRoute,\n              private snack: MatSnackBar,\n              private zone: NgZone\n              ) {\n    this.showSbContainer = false;\n  }\n\n\n\n  /**\n   * Set up callbacks when component DOM is ready.\n   */\n  public ngAfterViewInit() {\n    // _open and _close event are relayed by eqListener on the DOM node given as target when a context is requested\n    // #sb-booking-container is defined in booking.edit.component.html\n    $('#sb-booking-container').on('_close', (event, data) => {\n      this.zone.run( () => {\n      console.log(\"sb-booking-container closed\");\n      this.showSbContainer = false;\n      });\n    });\n    $('#sb-booking-container').on('_open', (event, data) => {\n      this.zone.run( () => {\n        console.log(\"sb-booking-container opened\");\n        this.showSbContainer = true;\n      });\n    });\n  }\n\n  public ngOnInit() {\n\n    // listen to changes relayed by children component on the _bookingInput observable\n    this._bookingInput\n    .asObservable()\n    .pipe(\n      debounceTime(500)\n    )\n    .subscribe(params => this.update(params));\n\n\n\n    // fetch the ID from the route\n    this.route.params.subscribe( async (params) => {\n      if(params && params.hasOwnProperty('id')) {\n        this.id = <number> params['id'];\n        // load booking object\n        try {\n          const result = await this.api.read(\"sale\\\\booking\\\\Booking\", [this.id], [\n            \"id\", \"created\", \"name\",\n            \"customer_id\", \"has_payer_organisation\", \"payer_organisation_id\",\n            \"center_id\", \"type_id\", \"description\", \"contacts_ids\"\n          ]);\n          if(result && result.length) {\n            this.booking = result[0];\n            this._bookingOutput.next(this.booking);\n          }\n        }\n        catch(response) {\n          console.warn(response);\n        }\n      }\n    });\n\n  }\n\n  /**\n   * Handler for updates relayed from children components\n   */\n  private async update(booking:any) {\n    console.log('BookingEditComponent: received change', booking, this.booking);\n    try {\n      let has_change = false;\n\n      if(booking.hasOwnProperty('customer_id') && booking.customer_id != this.booking.customer_id) {\n        await this.updateCustomer(booking.customer_id);\n        has_change = true;\n      }\n\n      if( (booking.hasOwnProperty('payer_organisation_id') && booking.payer_organisation_id != this.booking.payer_organisation_id)\n          || (booking.hasOwnProperty('has_payer_organisation') && booking.has_payer_organisation != this.booking.has_payer_organisation) ) {\n        await this.updatePayer(booking.payer_organisation_id);\n        has_change = true;\n      }\n\n      if(booking.hasOwnProperty('center_id') && booking.center_id != this.booking.center_id) {\n        await this.updateCenter(booking.center_id);\n        has_change = true;\n      }\n\n      if(booking.hasOwnProperty('description') && booking.description != this.booking.description) {\n        await this.updateDescription(booking.description);\n        has_change = true;\n      }\n\n\n      if(has_change) {\n        // update local object\n        this.booking = {...this.booking, ...booking};\n        // relay changes to children components\n        this._bookingOutput.next(this.booking);\n        // notify User\n        this.snack.open(\"Réservation mise à jour\");\n      }\n    }\n    catch(error) {\n      console.log('some changes could not be stored');\n    }\n  }\n\n  private async updateCustomer(customer_id:number) {\n    console.log('BookingEditComponent::updateCustomer', customer_id);\n    await this.api.update(\"sale\\\\booking\\\\Booking\", [this.id], <any>{\"customer_id\": customer_id});\n  }\n\n  private async updateDescription(description:string) {\n    console.log('BookingEditComponent::updateDescription', description);\n    await this.api.update(\"sale\\\\booking\\\\Booking\", [this.id], <any>{\"description\": description});\n  }\n  \n  private async updatePayer(payer_organisation_id:number) {\n    console.log('BookingEditComponent::updatePayer', payer_organisation_id);\n    let values:any = {};\n\n    if(payer_organisation_id <= 0) {\n      values.has_payer_organisation = false;\n    }\n    else {\n      values.has_payer_organisation = true;\n      values.payer_organisation_id = payer_organisation_id;\n    }\n\n    await this.api.update(\"sale\\\\booking\\\\Booking\", [this.id], values);\n  }\n\n\n  private async updateCenter(center_id:number) {\n    console.log('BookingEditComponent::updateCenter', center_id);\n    await this.api.update(\"sale\\\\booking\\\\Booking\", [this.id], <any>{\"center_id\": center_id});\n  }\n\n\n\n}","\r\n\r\n<div class=\"container\" *ngIf=\"!showSbContainer\">\r\n    <div class=\"booking-header\">Nouvelle réservation</div>\r\n    <div class=\"booking-body\">\r\n\r\n        <mat-horizontal-stepper linear #stepper>\r\n            <!-- step customer -->\r\n            <mat-step>\r\n                <ng-template matStepLabel>Client</ng-template>\r\n                <div class=\"step-container\">\r\n                    <booking-edit-customer [bookingInput]=\"_bookingOutput\" [bookingOutput]=\"_bookingInput\"></booking-edit-customer>\r\n                </div>\r\n            </mat-step>\r\n\r\n            <!-- step sojourn -->\r\n            <mat-step>\r\n                <ng-template matStepLabel>Séjour</ng-template>\r\n                <div class=\"step-container\" >\r\n                    <booking-edit-sojourn [bookingInput]=\"_bookingOutput\" [bookingOutput]=\"_bookingInput\"></booking-edit-sojourn>\r\n                </div>\r\n            </mat-step>\r\n\r\n            <!-- step booking -->\r\n            <mat-step>\r\n                <ng-template matStepLabel>Réservations</ng-template>\r\n                <div class=\"step-container\" >\r\n                </div>\r\n            </mat-step>\r\n        </mat-horizontal-stepper>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"sb-booking-container\" class=\"sb-container\"></div>","import { Component, Inject, OnInit, OnChanges, NgZone, Output, Input, EventEmitter, SimpleChanges } from '@angular/core';\nimport { AuthService, ApiService, ContextService } from 'sb-shared-lib';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\n\nimport { Observable, ReplaySubject, BehaviorSubject } from 'rxjs';\n\nimport { find, map, mergeMap, startWith, debounceTime } from 'rxjs/operators';\n\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\ninterface DialogCreatePartnerData {\n  owner_identity_id: number;\n  relationship: string;\n}\n\ninterface vmModel {\n  customer: {\n    name:           string,\n    inputClue:      ReplaySubject<any>,\n    filteredList:   Observable<any>,\n    inputChange:    (event:any) => void,\n    change:         (event:MatAutocompleteSelectedEvent) => void,\n    focus:          () => void,\n    restore:        () => void,\n    reset:          () => void\n  },\n  payer: {\n    name:           string\n    inputClue:      ReplaySubject<any>,\n    filteredList:   Observable<any>,\n    inputChange:    (event:any) => void,\n    change:         (event:any) => void,\n    focus:          () => void,\n    restore:        () => void,\n    reset:          () => void\n  }\n}\n\n@Component({\n  selector: 'booking-edit-customer',\n  templateUrl: 'booking.edit.customer.component.html',\n  styleUrls: ['booking.edit.customer.component.scss']\n})\nexport class BookingEditCustomerComponent implements OnInit  {\n\n  @Input() bookingInput: ReplaySubject<any>;\n  @Input() bookingOutput: ReplaySubject<any>;\n\n  public currentCustomer:any;\n  public currentPayer:any;\n\n  public has_payer:boolean;\n\n  public vm: vmModel;\n\n  constructor(\n              private api: ApiService,\n              private dialog: MatDialog,\n              private zone: NgZone,\n              private context:ContextService\n              ) {\n\n    this.currentCustomer = null;\n    this.has_payer = false;\n    this.currentPayer = null;\n\n    this.vm = {\n      customer: {\n        name:           '',\n        inputClue:      new ReplaySubject(1),\n        filteredList:   new Observable(),\n        inputChange:    (event:any) => this.customerInputChange(event),\n        change:         (event:MatAutocompleteSelectedEvent) => this.customerChange(event),\n        focus:          () => this.customerFocus(),\n        restore:        () => this.customerRestore(),\n        reset:          () => this.customerReset()\n      },\n      payer: {\n        name:           '',\n        inputClue:      new ReplaySubject(1),\n        filteredList:   new Observable(),\n        inputChange:    (event:any) => this.payerInputChange(event),\n        change:         (event:any) => this.payerChange(event),\n        focus:          () => this.payerFocus(),\n        restore:        () => this.payerRestore(),\n        reset:          () => this.payerReset()\n      }\n    };\n\n  }\n\n\n  public ngOnInit() {\n\n    /**\n     * listen to the parent for changes on booking object\n     */\n    this.bookingInput.subscribe( async (booking: any) => {\n      this.zone.run( async () => {\n        try {\n\n          this.has_payer = booking.has_payer_organisation;\n\n          let data:any = await this.api.read(\"identity\\\\Partner\", [booking.customer_id], [\"id\", \"name\", \"partner_identity_id\"]);\n          if(data && data.length) {\n            let customer = data[0];\n            this.currentCustomer = customer;\n            this.vm.customer.name = customer.name;\n          }\n          if(this.has_payer && booking.payer_organisation_id) {\n            let data:any = await this.api.read(\"identity\\\\Partner\", [booking.payer_organisation_id], [\"id\", \"name\", \"partner_identity_id\"]);\n            if(data && data.length) {\n              let payer = data[0];\n              this.currentPayer = payer;\n              this.vm.payer.name = payer.name;\n            }\n          }\n        }\n        catch(response) {}\n      });\n\n\n    });\n\n\n    // update filtered lists, based on input clues\n\n    this.vm.customer.filteredList = this.vm.customer.inputClue.pipe(\n      debounceTime(300),\n      map( (value:any) => (typeof value === 'string' ? value : (value == null)?'':value.name) ),\n      mergeMap( async (name:string) => this.filterCustomers(name) )\n    );\n\n    this.vm.payer.filteredList = this.vm.payer.inputClue.pipe(\n      debounceTime(300),\n      map( (value:any) => (typeof value === 'string' ? value : (value == null)?'':value.name) ),\n      mergeMap( async (name:string) => this.filterPayers(name) )\n    );\n\n  }\n\n  private async customerChange(event:MatAutocompleteSelectedEvent) {\n    let customer = event.option.value;\n    this.currentCustomer = customer;\n    this.vm.customer.name = customer.name;\n    this.bookingOutput.next({customer_id: this.currentCustomer.id});\n  }\n\n  private customerInputChange(event:any) {\n    this.vm.customer.inputClue.next(event.target.value);\n  }\n\n  private customerFocus() {\n    this.vm.customer.inputClue.next(\"\");\n  }\n\n  private customerReset() {\n    setTimeout( () => {\n      this.vm.customer.name = '';\n    }, 100);\n  }\n\n  private customerRestore() {\n    if(this.currentCustomer) {\n      this.vm.customer.name = this.currentCustomer.name;\n    }\n    else {\n      this.vm.customer.name = '';\n    }\n  }\n\n  private payerChange(event:any) {\n    console.log('BookingEditCustomerComponent::payerChange', event)\n    let payer_organisation_id = 0;\n\n    // from mat-slide-toggle\n    if(event && event.hasOwnProperty('checked')) {\n      this.has_payer = <boolean>event.checked;\n    }\n\n    // from mat-autocomplete\n    if(event && event.option && event.option.value) {\n      let payer = event.option.value;\n      this.currentPayer = payer;\n      this.vm.payer.name = payer.name;\n      payer_organisation_id = payer.id;\n    }\n\n    console.log('emitting to parent', payer_organisation_id);\n    this.bookingOutput.next({payer_organisation_id: payer_organisation_id, has_payer_organisation: this.has_payer});\n  }\n\n  private payerInputChange(event:any) {\n    this.vm.payer.inputClue.next(event.target.value);\n  }\n\n  private payerFocus() {\n    this.vm.payer.inputClue.next(\"\");\n  }\n\n  private payerReset() {\n    setTimeout( () => {\n      this.vm.payer.name = '';\n    }, 100);\n  }\n\n  private payerRestore() {\n    if(this.currentPayer) {\n      this.vm.payer.name = this.currentPayer.name;\n    }\n    else {\n      this.vm.payer.name = '';\n    }\n  }\n\n\n  /**\n   * Request a new eQ context for selecting a payer, and relay change to self::payerChange(), if any\n   * #sb-booking-container is defined in booking.edit.component.html\n   */\n  public selectPayer() {\n    console.log(\"BookingEditCustomerComponent::selectPayer\");\n\n    //\n    let descriptor = {\n      context: {\n        entity:     'identity\\\\Partner',\n        type:       'form',\n        name:       'payer',\n        domain:     [ ['owner_identity_id', '=', this.currentCustomer.partner_identity_id], ['relationship', '=', 'payer'] ],\n        mode:       'edit',\n        purpose:    'create',\n        target:     '#sb-booking-container',\n        callback:   (data:any) => {\n          if(data.objects && data.objects.length) {\n            this.payerChange({option: {\n              value: data.objects[0]\n            }});\n          }\n        }\n      }\n    };\n\n    this.context.change(descriptor);\n  }\n\n  public createPayer() {\n    const dialogRef = this.dialog.open(DialogCreatePartner, {\n      width: '80vw',\n      data: {owner_identity_id: this.currentCustomer.partner_identity_id, relationship: 'payer'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  /**\n   * Search for Customers that match the name.\n   *\n   * @param name\n   * @returns\n   */\n  private async filterCustomers(name: string) {\n    let filtered:any[] = [];\n    try {\n      let data:any[] = await this.api.collect(\"identity\\\\Partner\", [[\"name\", \"ilike\", '%'+name+'%'], [\"relationship\", \"=\", \"customer\"]], [\"id\", \"name\"], 'name', 'asc', 0, 5);\n      filtered = data;\n    }\n    catch(response) {\n      console.log(response);\n    }\n    return filtered;\n  }\n\n  private async filterPayers(name: string) {\n    let filtered:any[] = [];\n    try {\n      let data:any[] = await this.api.collect(\"identity\\\\Partner\", [[\"name\", \"ilike\", '%'+name+'%'], [\"owner_identity_id\", \"=\", this.currentCustomer.partner_identity_id], [\"relationship\", \"=\", \"payer\"]], [\"id\", \"name\"], 'name', 'asc', 0, 5);\n      filtered = data;\n    }\n    catch(response) {\n      console.log(response);\n    }\n    return filtered;\n  }\n\n\n}\n\n\n\n@Component({\n  selector: 'dialog-booking-edit-customer-create-partner-dialog',\n  templateUrl: 'booking.edit.customer.create.partner.dialog.html'\n})\nexport class DialogCreatePartner {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogCreatePartner>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogCreatePartnerData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"container\">\r\n\r\n    <div style=\"flex: 0 1 50%;\">\r\n        <mat-form-field style=\"width: 300px;\">\r\n          <mat-label>Client</mat-label>\r\n          <input  matInput \r\n                  type=\"text\"  \r\n                  [matAutocomplete]=\"customerAutocomplete\" \r\n                  [ngModel]=\"vm.customer.name\" \r\n                  (keyup)=\"vm.customer.inputChange($event)\" \r\n                  (focus)=\"vm.customer.focus()\"\r\n                  (blur)=\"vm.customer.restore()\"\r\n                  placeholder=\"Commencez à taper le nom\" />\r\n          \r\n          <button mat-button *ngIf=\"vm.customer.name.length\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"vm.customer.reset()\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n          \r\n          <mat-autocomplete #customerAutocomplete=\"matAutocomplete\" (optionSelected)=\"vm.customer.change($event)\">\r\n            <div  *ngIf=\"vm.customer.filteredList | async; let list\">\r\n              <mat-option *ngFor=\"let customer of list\" [value]=\"customer\">\r\n                {{customer.name}}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"list.length == 0\"><i>pas de résultat</i></mat-option>\r\n            </div>\r\n          </mat-autocomplete>\r\n          \r\n          <mat-hint [align]=\"'start'\" style=\"opacity: 1\">\r\n            <span>Sélection du client</span>\r\n          </mat-hint>\r\n                \r\n        </mat-form-field>       \r\n\r\n    </div>\r\n\r\n    <div style=\"flex: 0 1 50%;\">\r\n      <div>\r\n        <mat-slide-toggle [ngModel]=\"has_payer\" (change)=\"vm.payer.change($event)\">Réservation payée par une autre organisation</mat-slide-toggle>\r\n      </div>\r\n      <div *ngIf=\"has_payer\">      \r\n\r\n        <mat-form-field style=\"width: 50%;\">\r\n          <mat-label>Organisme payeur</mat-label>\r\n          <input  matInput \r\n                  type=\"text\"  \r\n                  [matAutocomplete]=\"payerAutocomplete\" \r\n                  [ngModel]=\"vm.payer.name\" \r\n                  (keyup)=\"vm.payer.inputChange($event)\" \r\n                  (focus)=\"vm.payer.focus()\"\r\n                  (blur)=\"vm.payer.restore()\"\r\n                  placeholder=\"Commencez à taper le nom\" />\r\n          \r\n          <button mat-button *ngIf=\"vm.payer.name.length\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"vm.payer.reset()\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n          \r\n          <mat-autocomplete #payerAutocomplete=\"matAutocomplete\" (optionSelected)=\"vm.payer.change($event)\">\r\n            <div  *ngIf=\"vm.payer.filteredList | async; let list\">\r\n              <mat-option *ngFor=\"let payer of list\" [value]=\"payer\">\r\n                {{payer.name}}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"list.length == 0\"><i>pas de résultat</i></mat-option>\r\n            </div>\r\n          </mat-autocomplete>\r\n          \r\n          <mat-hint [align]=\"'start'\" style=\"opacity: 1\">\r\n            <span>Sélection de l'organisme payeur</span>\r\n          </mat-hint>                \r\n        </mat-form-field>\r\n\r\n        <button mat-button (click)=\"selectPayer()\">Ajouter un organisme payeur</button>\r\n      </div>\r\n      \r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n","<h1 mat-dialog-title>Nouveau partenaire</h1>\r\n\r\n<div mat-dialog-content>\r\n\r\n  <div style=\"display: flex; flex-direction: row; \">\r\n    <div style=\"flex: 0 1 49%; display: flex; flex-direction: column; margin: 10px;\">\r\n      <p style=\"font-weight: 500;\">Infos</p>\r\n      <mat-form-field >\r\n        <mat-label>Nom légal</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n      <mat-slide-toggle >Assujetti à la TVA ?</mat-slide-toggle>\r\n      <mat-form-field >\r\n        <mat-label>Numéro de TVA</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n    </div>\r\n    <div style=\"flex: 0 1 49%; display: flex; flex-direction: column; margin: 10px;\">\r\n      <p style=\"font-weight: 500;\">Adresse</p>\r\n      <mat-form-field >\r\n        <mat-label>Rue</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n      <mat-form-field >\r\n        <mat-label>Dispatch</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n      <mat-form-field >\r\n        <mat-label>Ville</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n      <mat-form-field >\r\n        <mat-label>Code postal</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n      <mat-form-field >\r\n        <mat-label>Pays</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n    </div>    \r\n  </div>\r\n\r\n\r\n  <mat-form-field >\r\n    <mat-label>Favorite Animal</mat-label>\r\n    <input matInput value=\"\" />\r\n  </mat-form-field>\r\n\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">Annuler</button>\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Créer</button>\r\n</div>","import { Component, Inject, OnInit, OnChanges, NgZone, Output, Input, EventEmitter, SimpleChanges } from '@angular/core';\nimport { AuthService, ApiService, ContextService } from 'sb-shared-lib';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\n\nimport { Observable, ReplaySubject, BehaviorSubject } from 'rxjs';\n\nimport { find, map, mergeMap, startWith, debounceTime } from 'rxjs/operators';\n\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { type } from 'jquery';\n\ninterface DialogCreateContactData {\n  owner_identity_id: number;\n  relationship: string;\n}\n\ninterface vmModel {\n  center: {\n    name:           string,\n    inputClue:      ReplaySubject<any>,\n    filteredList:   Observable<any>,\n    inputChange:    (event:any) => void,\n    change:         (event:MatAutocompleteSelectedEvent) => void,\n    focus:          () => void,\n    restore:        () => void,\n    reset:          () => void\n  },\n  type: {\n    name:           string\n    inputClue:      ReplaySubject<any>,\n    filteredList:   Observable<any>,\n    inputChange:    (event:any) => void,\n    change:         (event:any) => void,\n    focus:          () => void,\n    restore:        () => void,\n    reset:          () => void\n  },\n  description: {\n    value:          string,\n    change:         (event:any) => void\n  },\n  contacts: {\n    values:         Array<any>,\n    change:         (event:any) => void\n    create:         () => void\n  }\n\n}\n\n@Component({\n  selector: 'booking-edit-sojourn',\n  templateUrl: 'booking.edit.sojourn.component.html',\n  styleUrls: ['booking.edit.sojourn.component.scss']\n})\nexport class BookingEditSojournComponent implements OnInit  {\n\n  @Input() bookingInput: ReplaySubject<any>;\n  @Input() bookingOutput: ReplaySubject<any>;\n\n  public currentCenter:any;\n  public currentType:any;\n\n  public has_payer:boolean;\n\n  public vm: vmModel;\n\n  constructor(\n              private api: ApiService,\n              private dialog: MatDialog,\n              private zone: NgZone,\n              private context:ContextService\n              ) {\n\n    this.currentCenter = null;\n    this.currentType = null;\n\n    this.vm = {\n      center: {\n        name:           '',\n        inputClue:      new ReplaySubject(1),\n        filteredList:   new Observable(),\n        change:         (event:MatAutocompleteSelectedEvent) => this.centerChange(event),\n        inputChange:    (event:any) => this.centerInputChange(event),\n        focus:          () => this.centerFocus(),\n        restore:        () => this.centerRestore(),\n        reset:          () => this.centerReset()\n      },\n      type: {\n        name:           '',\n        inputClue:      new ReplaySubject(1),\n        filteredList:   new Observable(),\n        change:         (event:any) => this.typeChange(event),\n        inputChange:    (event:any) => this.typeInputChange(event),\n        focus:          () => this.typeFocus(),\n        restore:        () => this.typeRestore(),\n        reset:          () => this.typeReset()\n      },\n      description: {\n        value:          '',\n        change:         (event:any) => this.descriptionChange(event)\n      },\n      contacts: {\n        values:          [],\n        change:          (event:any) => this.descriptionChange(event),\n        create:         () => this.createContact()\n      }\n    };\n\n  }\n\n\n  public ngOnInit() {\n\n    /**\n     * listen to the parent for changes on booking object\n     */\n    this.bookingInput.subscribe( async (booking: any) => {\n      this.zone.run( async () => {\n        try {\n          console.log(\"BookingEditSojournComponent: received changes from parent\", booking);\n\n          if(booking.center_id) {          \n            let data:any = await this.api.read(\"lodging\\\\identity\\\\Center\", [booking.center_id], [\"id\", \"name\", \"code\", \"organisation_id\"]);\n            if(data && data.length) {\n              let center = data[0];\n              this.currentCenter = center;\n              this.vm.center.name = center.name;\n            }\n          }\n\n          if(booking.type_id) {\n            let data:any = await this.api.read(\"sale\\\\booking\\\\BookingType\", [booking.type_id], [\"id\", \"name\", \"code\"]);\n            if(data && data.length) {\n              let type = data[0];\n              this.currentType = type;\n              this.vm.type.name = type.name;\n            }\n          }\n\n          if(booking.description && booking.description.length) {\n            this.vm.description.value = booking.description;\n          }\n\n          if(booking.contacts_ids) {          \n            let data:any = await this.api.read(\"sale\\\\booking\\\\Contact\", [booking.contacts_ids], [\"id\", \"name\", \"type\"]);\n            if(data && data.length) {\n              this.vm.contacts = data;\n            }\n          }\n          \n        }\n        catch(response) {}\n      });\n\n\n    });\n\n\n    // update filtered lists, based on input clues\n\n    this.vm.center.filteredList = this.vm.center.inputClue.pipe(\n      debounceTime(300),\n      map( (value:any) => (typeof value === 'string' ? value : (value == null)?'':value.name) ),\n      mergeMap( async (name:string) => this.filterCenters(name) )\n    );\n\n    this.vm.type.filteredList = this.vm.type.inputClue.pipe(\n      debounceTime(300),\n      map( (value:any) => (typeof value === 'string' ? value : (value == null)?'':value.name) ),\n      mergeMap( async (name:string) => this.filterTypes(name) )\n    );\n\n  }\n\n  private async centerChange(event:MatAutocompleteSelectedEvent) {\n    let center = event.option.value;\n    this.currentCenter = center;\n    this.vm.center.name = center.name;\n\n    // relay change to parent component\n    this.bookingOutput.next({center_id: this.currentCenter.id});\n  }\n\n  private centerFocus() {\n    this.vm.center.inputClue.next(\"\");\n  }\n\n  private centerInputChange(event:any) {\n    this.vm.center.inputClue.next(event.target.value);\n  }\n\n  private centerReset() {\n    setTimeout( () => {\n      this.vm.center.name = '';\n    }, 100);\n  }\n\n  private centerRestore() {\n    if(this.currentCenter) {\n      this.vm.center.name = this.currentCenter.name;\n    }\n    else {\n      this.vm.center.name = '';\n    }\n  }\n\n  private descriptionChange(event:any) {\n    console.log('BookingEditCustomerComponent::descriptionChange', event);\n    let description = event.target.value;\n    // relay change to parent component\n    this.bookingOutput.next({description: description});\n  }\n\n  private typeChange(event:any) {\n    console.log('BookingEditCustomerComponent::typeChange', event)\n\n    // from mat-autocomplete\n    if(event && event.option && event.option.value) {\n      let type = event.option.value;\n      this.currentType = type;\n      this.vm.type.name = type.name;\n      // relay change to parent component\n      this.bookingOutput.next({type_id: type.id});\n    }\n\n  }\n\n  private typeInputChange(event:any) {\n    this.vm.type.inputClue.next(event.target.value);\n  }\n\n  private typeFocus() {\n    this.vm.type.inputClue.next(\"\");\n  }\n\n  private typeReset() {\n    setTimeout( () => {\n      this.vm.type.name = '';\n    }, 100);\n  }\n\n  private typeRestore() {\n    if(this.currentType) {\n      this.vm.type.name = this.currentType.name;\n    }\n    else {\n      this.vm.type.name = '';\n    }\n  }\n\n\n  private createContact() {\n    const dialogRef = this.dialog.open(DialogCreateContact, {\n      width: '80vw',\n      data: { relationship: 'contact', type: 'booking' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        console.log(result);\n      }\n    });\n  }\n\n  /**\n   * Search for Customers that match the name.\n   *\n   * @param name\n   * @returns\n   */\n  private async filterCenters(name: string) {\n    let filtered:any[] = [];\n    // server will return only centers visible for current User\n    try {\n      let data:any[] = await this.api.collect(\"lodging\\\\identity\\\\Center\", [[\"name\", \"ilike\", '%'+name+'%']], [\"id\", \"name\"], 'name', 'asc', 0, 5);\n      filtered = data;\n    }\n    catch(response) {\n      console.log(response);\n    }\n    return filtered;\n  }\n\n  private async filterTypes(name: string) {\n    let filtered:any[] = [];\n    try {\n      let data:any[] = await this.api.collect(\"sale\\\\booking\\\\BookingType\", [[\"name\", \"ilike\", '%'+name+'%']], [\"id\", \"name\"], 'name', 'asc', 0, 25);\n      filtered = data;\n    }\n    catch(response) {\n      console.log(response);\n    }\n    return filtered;\n  }\n\n\n}\n\n\n\n@Component({\n  selector: 'dialog-booking-edit-customer-create-contact-dialog',\n  templateUrl: 'booking.edit.customer.create.contact.dialog.html'\n})\nexport class DialogCreateContact {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogCreateContact>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogCreateContactData) {}\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"container\">\r\n\r\n    <div style=\"flex: 0 1 50%;\">\r\n\r\n        <!-- Center selection -->\r\n        <mat-form-field style=\"width: 350px;\">\r\n          <mat-label>Centre</mat-label>\r\n          <input  matInput \r\n                  type=\"text\"  \r\n                  [matAutocomplete]=\"centerAutocomplete\" \r\n                  [ngModel]=\"vm.center.name\" \r\n                  (keyup)=\"vm.center.inputChange($event)\" \r\n                  (focus)=\"vm.center.focus()\"\r\n                  (blur)=\"vm.center.restore()\"\r\n                  placeholder=\"Commencez à taper le nom\" />\r\n          \r\n          <button mat-button *ngIf=\"vm.center.name.length\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"vm.center.reset()\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n          \r\n          <mat-autocomplete #centerAutocomplete=\"matAutocomplete\" (optionSelected)=\"vm.center.change($event)\">\r\n            <div  *ngIf=\"vm.center.filteredList | async; let list\">\r\n              <mat-option *ngFor=\"let center of list\" [value]=\"center\">\r\n                {{center.name}}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"list.length == 0\"><i>pas de résultat</i></mat-option>\r\n            </div>\r\n          </mat-autocomplete>\r\n          \r\n          <mat-hint [align]=\"'start'\" style=\"opacity: 1\">\r\n            <span>Sélection du centre</span>\r\n          </mat-hint>                \r\n        </mat-form-field>\r\n\r\n        <!-- Booking type selection -->        \r\n        <mat-form-field style=\"width: 50%;\">\r\n          <mat-label>Type de réservation</mat-label>\r\n          <input  matInput \r\n                  type=\"text\"  \r\n                  [matAutocomplete]=\"typeAutocomplete\" \r\n                  [ngModel]=\"vm.type.name\" \r\n                  (keyup)=\"vm.type.inputChange($event)\" \r\n                  (focus)=\"vm.type.focus()\"\r\n                  (blur)=\"vm.type.restore()\"\r\n                  placeholder=\"Commencez à taper le nom\" />\r\n          \r\n          <button mat-button *ngIf=\"vm.type.name.length\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"vm.type.reset()\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n          \r\n          <mat-autocomplete #typeAutocomplete=\"matAutocomplete\" (optionSelected)=\"vm.type.change($event)\">\r\n            <div  *ngIf=\"vm.type.filteredList | async; let list\">\r\n              <mat-option *ngFor=\"let type of list\" [value]=\"type\">\r\n                {{type.name}}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"list.length == 0\"><i>pas de résultat</i></mat-option>\r\n            </div>\r\n          </mat-autocomplete>\r\n          \r\n          <mat-hint [align]=\"'start'\" style=\"opacity: 1\">\r\n            <span>Type de séjour de la réservation</span>\r\n          </mat-hint>                \r\n        </mat-form-field>        \r\n\r\n\r\n        <!-- list of contacts -->\r\n        <div *ngFor=\"let contact of vm.contacts.values\">\r\n          <span>{{contact.id}}</span>\r\n          <span>{{contact.name}}</span>\r\n          <span>{{contact.type}}</span>\r\n\r\n        </div>\r\n        <button mat-button (click)=\"vm.contacts.create()\">Ajouter un contact</button>\r\n\r\n      \r\n    </div>\r\n\r\n    <div style=\"flex: 0 1 50%;\">\r\n      \r\n\r\n      <div>\r\n\r\n        <!-- description -->\r\n        <mat-form-field style=\"width: 100%;\">\r\n          <mat-label>Description</mat-label>\r\n          <textarea matInput \r\n                    cdkTextareaAutosize\r\n                    cdkAutosizeMinRows=\"3\"\r\n                    cdkAutosizeMaxRows=\"20\"\r\n                    placeholder=\"Indiquez des détails ou spécificités du séjour\" [ngModel]=\"vm.description.value\" (change)=\"vm.description.change($event)\"></textarea>\r\n        </mat-form-field>      \r\n\r\n      </div>\r\n      \r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n","<h1 mat-dialog-title>Nouveau contact pour la réservation</h1>\r\n\r\n<div mat-dialog-content>\r\n\r\n  <div style=\"display: flex; flex-direction: row; \">\r\n    <div style=\"flex: 0 1 49%; display: flex; flex-direction: column; margin: 10px;\">\r\n      <p style=\"font-weight: 500;\">Infos</p>\r\n      <mat-form-field >\r\n        <mat-label>Prénom</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n      <mat-form-field >\r\n        <mat-label>Nom</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Type de contact</mat-label>\r\n        <mat-select>\r\n          <mat-option  value=\"booking\">réservation</mat-option>\r\n          <mat-option  value=\"invoice\">facturation</mat-option>\r\n          <mat-option  value=\"contract\">contrats</mat-option>\r\n          <mat-option  value=\"sojourn\">séjour</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div style=\"flex: 0 1 49%; display: flex; flex-direction: column; margin: 10px;\">\r\n      <p style=\"font-weight: 500;\">Coordonnées</p>\r\n      <mat-form-field >\r\n        <mat-label>Email</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n      <mat-form-field >\r\n        <mat-label>Phone</mat-label>\r\n        <input matInput value=\"\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n<div mat-dialog-actions style=\"justify-content: flex-end;\">\r\n  <button mat-button (click)=\"onCancel()\">Annuler</button>\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Ok</button>\r\n</div>"],"sourceRoot":"webpack:///"}