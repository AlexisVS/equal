{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/app.root.component.html","./src/app/app.root.component.ts","./src/app/app/auth/recover/auth.recover.component.ts","./src/app/app/auth/recover/auth.recover.component.html","./src/app/app/auth/reset/auth.reset.component.ts","./src/app/app/auth/reset/auth.reset.component.html","./src/app/app/auth/signin/auth.signin.component.ts","./src/app/app/auth/signin/auth.signin.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\n\nimport { AuthSigninComponent } from './app/auth/signin/auth.signin.component';\nimport { AuthRecoverComponent } from './app/auth/recover/auth.recover.component';\nimport { AuthResetComponent } from './app/auth/reset/auth.reset.component';\n\n\nconst routes: Routes = [\n  /* routes specific to current app */\n  {\n    path: 'signin',\n    component: AuthSigninComponent\n  },\n  {\n    path: 'recover',\n    component: AuthRecoverComponent\n  },\n  {\n    path: 'reset/:token',\n    component: AuthResetComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })    \n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatNativeDateModule, DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\n\nimport { SharedLibModule, AuthInterceptorService } from 'sb-shared-lib';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppRootComponent } from './app.root.component';\n\n/* HTTP requests interception dependencies */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { AuthRecoverComponent } from './app/auth/recover/auth.recover.component';\nimport { AuthSigninComponent } from './app/auth/signin/auth.signin.component';\nimport { AuthResetComponent } from './app/auth/reset/auth.reset.component';\n\n\n@NgModule({\n  declarations: [\n    AppRootComponent, AuthRecoverComponent, AuthSigninComponent, AuthResetComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedLibModule,\n    MatNativeDateModule,\n    PlatformModule,\n  ],\n  providers: [\n    // add HTTP interceptor to inject AUTH header to any outgoing request\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true },\n  ],\n  bootstrap: [AppRootComponent]\n})\nexport class AppModule { }\n","<div *ngIf=\"!ready\" class=\"container\"><mat-spinner></mat-spinner></div>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'sb-shared-lib';\n\n/* \nThis is the component that is bootstrapped by app.module.ts\n*/\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.root.component.html',\n  styleUrls: ['./app.root.component.scss']  \n})\nexport class AppRootComponent implements OnInit {\n\n  public ready: boolean = false;\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n \n  public async ngOnInit() {\n\n    // listen to authentication events\n    this.auth.getObservable().subscribe( (user:any) => {\n      console.log('received user object', user);\n\n      if(user.id > 0) {\n        // user is already authenticated : go to root page (Apps)\n        this.navigateToApps();\n      }\n\n    });\n\n    // request authentication\n    try {\n      await this.auth.authenticate();\n    }\n    catch(err) {\n        // user is not authenticated : hide loader and go to /signin (or received route)\n        this.ready = true;\n        try {\n          let hash = window.location.hash;\n          if(!hash.length) {\n            throw new Error('empty_hash');\n          }\n          let route = hash.substring(2);  \n          await this.router.navigate([route]);\n        }\n        catch(err) {\n          await this.router.navigate(['/signin']);\n        }      \n\n    }    \n\n  }\n\n  public navigateToApps() {\n    window.location.href = '/apps';\n  }\n  \n}","import { Component, OnInit, Input  } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from 'sb-shared-lib';\n\n\n@Component({\n  selector: 'auth-recover',\n  templateUrl: 'auth.recover.component.html',\n  styleUrls: ['auth.recover.component.scss']\n})\nexport class AuthRecoverComponent implements OnInit {\n  public form: FormGroup;\n  public loading = false;\n  public submitted = false;\n\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private router: Router,\n      private auth: AuthService\n  ) { \n    this.form = new FormGroup({});\n  }\n\n  // convenience getter for easy access to form fields\n  public get f() { \n    return this.form.controls; \n  }\n\n  ngOnInit() {\n    this.form = <FormGroup>this.formBuilder.group({\n        email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]]\n    });\n\n    this.form.get('email').valueChanges.subscribe( () => {\n        this.submitted = false;\n    });\n    \n  }\n\n  public async onSubmit() {\n      console.log('onSubmit');\n      // prevent sumit for invalid form \n      if (this.form.invalid) {\n          return;\n      }\n\n      this.submitted = true;\n      this.loading = true;\n\n      try {\n        console.log('sending request');\n        const data = await this.auth.passRecover(this.f.email.value);\n        this.loading = false;\n      }\n      catch(response:any) {\n        if(response.hasOwnProperty('error')) {\n          let code = Object.keys(response.error['errors'])[0];\n          let msg = response.error['errors'][code];\n          console.log({\n            code: code, \n            message: msg\n          });\n        }\n        this.loading = false;\n      }\n  }\n\n  public onSignin() {\n    this.router.navigate(['/signin']);\n  }\n}","<div class=\"container\">\n\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar><mat-icon>sync</mat-icon></div>\n            <mat-card-title>{{'AUTH_RECOVER_TITLE' | translate}}</mat-card-title>\n            <mat-card-subtitle>{{'AUTH_RECOVER_SUBTITLE' | translate}}</mat-card-subtitle>\n        </mat-card-header>    \n        <mat-card-content>\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-row\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>{{'AUTH_RECOVER_EMAIL' | translate}}</mat-label>\n                        <input type=\"text\" matInput formControlName=\"email\" [readonly]=\"loading || submitted\" />\n                        <mat-error *ngIf=\"f.email.errors\">{{'AUTH_ERROR_MISSING_EMAIL' | translate}}</mat-error>\n                    </mat-form-field>                \n                </div>             \n            \n                <div class=\"actions\" >\n                    <button mat-flat-button [class.spinner]=\"loading\" [disabled]=\"loading || submitted\" color=\"primary\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        {{'AUTH_RECOVER_ACTION_RECOVER' | translate}}\n                    </button>\n                    <!-- <button *ngIf=\"false\" mat-flat-button >Register</button> --> \n                </div>\n\n                <div class=\"messages\" *ngIf=\"submitted\">\n                    <div class=\"message\">{{'AUTH_RECOVER_MESSAGE_SUBMITTED' | translate}}</div>\n                </div>\n\n                <div class=\"options\">\n                    <span class=\"signin\" (click)=\"onSignin()\">{{'AUTH_RECOVER_ACTION_SIGNIN' | translate}}</span>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n\n    <div>\n        <div class=\"sb-logo\"></div>\n    </div>\n</div>","import { Component, OnInit, Input  } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService, ApiService } from 'sb-shared-lib';\n\n\n\n@Component({\n  selector: 'auth-reset',\n  templateUrl: 'auth.reset.component.html',\n  styleUrls: ['auth.reset.component.scss']\n})\nexport class AuthResetComponent implements OnInit {\n  public form: FormGroup;\n  public loading:boolean = false;\n  public submitted:boolean = false;\n  public hidepass:boolean = true;\n  public hideconfirm:boolean = true;\n  public signin_error:boolean = false;\n  public server_error:boolean = false;\n\n  private token: string = '';\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private auth: AuthService,\n      private api: ApiService,\n      private router: Router,\n      private route: ActivatedRoute\n  ) { \n    this.form = new FormGroup({});\n  }\n\n  // convenience getter for easy access to form fields\n  public get f() { \n    return this.form.controls; \n  }\n\n  public async ngOnInit() {\n\n    // fetch token from route\n    this.route.params.subscribe( async (params) => {\n      if(params && params.hasOwnProperty('token')) {\n        this.token = params['token'];\n      }\n    });\n    \n    // setup the form\n    this.form = <FormGroup>this.formBuilder.group({\n        password: ['', Validators.required, Validators.pattern('^.{8,}$')],\n        confirm: ['', Validators.required]\n    });\n\n    this.form.get('password').valueChanges.subscribe( () => {\n        this.submitted = false;\n        this.f.password.setErrors(null);\n    });\n\n    this.form.get('confirm').valueChanges.subscribe( () => {\n      this.submitted = false;\n      this.f.confirm.setErrors(null);\n    });    \n  }\n\n  public async onSignin() {\n    this.router.navigate(['/signin']);\n  }\n\n  public async onSubmit() {\n      let error = false;\n\n      if(this.f.password.value != this.f.confirm.value) {\n        error = true;\n        this.f.confirm.setErrors({'incorrect': true});\n      }\n\n      // prevent sumit for invalid form \n      if (error || this.form.invalid) {\n          return;\n      }\n      this.signin_error = false;\n      this.server_error = false;      \n      this.submitted = true;\n      this.loading = true;\n\n      try {\n        const data = await this.api.fetch('/?do=user_pass-update', {token: this.token, password: this.f.password.value, confirm: this.f.confirm.value});\n        // success: we should be able to authenticate\n        this.auth.authenticate();\n        // AppRootComponent should now redirect to /apps\n      }\n      catch(response:any) {\n        console.log(response);\n\n        try {\n          if(response.hasOwnProperty('status')) {\n            if(response.status == 0) {\n              throw {\n                code: 'server_error',\n                message: 'Server error'\n              };\n            }\n            if(response.hasOwnProperty('error') && response.error.hasOwnProperty('errors')) {\n              let code = Object.keys(response.error['errors'])[0];\n              let msg = response.error['errors'][code];\n              throw {\n                code: code,\n                message: msg\n              };\n            }    \n          }\n          else {\n            throw {\n              code: 'server_error',\n              message: 'Server error'\n            };\n          }\n        }\n        catch(exception:any) {\n            if(exception.code == 'server_error') {\n              this.server_error = true;\n            }\n            else {\n              this.signin_error = true;\n            }          \n        }\n        // there was an error: stop loading indicator\n        this.loading = false;        \n      }\n  }\n\n}","<div class=\"container\">\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar><mat-icon>login</mat-icon></div>\n            <mat-card-title>{{'AUTH_RESET_TITLE' | translate}}</mat-card-title>\n            <mat-card-subtitle>{{'AUTH_RESET_SUBTITLE' | translate}}</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n\n                <div class=\"form-row\">\n                    <mat-form-field appearance=\"fill\" class=\"password\">\n                        <mat-label>{{'AUTH_RESET_PASSWORD' | translate}}</mat-label>\n                        <input [type]=\"(hidepass)?'password':'text'\" matInput formControlName=\"password\" />\n                        <mat-icon matSuffix (click)=\"hidepass = !hidepass\">{{(hidepass)?'visibility_off':'visibility'}}</mat-icon>\n                        <mat-error *ngIf=\"f.password.errors\">{{'AUTH_ERROR_INVALID_PASSWORD' | translate}}</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"form-row\">\n                    <mat-form-field appearance=\"fill\" class=\"password\">\n                        <mat-label>{{'AUTH_RESET_CONFIRM' | translate}}</mat-label>\n                        <input [type]=\"(hideconfirm)?'password':'text'\" matInput formControlName=\"confirm\" />\n                        <mat-icon matSuffix (click)=\"hideconfirm = !hideconfirm\">{{(hideconfirm)?'visibility_off':'visibility'}}</mat-icon>\n                        <mat-error *ngIf=\"f.confirm.errors\">{{'AUTH_ERROR_CONFIRM_MISMATCH' | translate}}</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"actions\" >\n                    <button mat-flat-button [class.spinner]=\"loading\"  [disabled]=\"loading\" color=\"primary\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        {{'AUTH_RESET_ACTION_SUBMIT' | translate}}\n                    </button>\n                    <button *ngIf=\"false\" mat-flat-button >Register</button>\n                </div>\n\n                <div class=\"messages\" *ngIf=\"submitted && signin_error\">\n                    <div class=\"message\" ><mat-icon>not_interested</mat-icon> <span>{{'AUTH_ERROR_INVALID_USERNAME_OR_PASSWORD' | translate}}</span></div>\n                </div>\n                <div class=\"messages\" *ngIf=\"submitted && server_error\">\n                    <div class=\"message\" ><mat-icon>not_interested</mat-icon> <span>{{'AUTH_ERROR_SERVER_ERROR' | translate}}</span></div>\n                </div>\n\n                <div class=\"options\">\n                    <span class=\"recover\" (click)=\"onSignin()\">{{'AUTH_RESET_ACTION_SIGNIN' | translate}}</span>\n                </div>\n\n            </form>\n        </mat-card-content>\n    </mat-card>\n    <div>\n        <div class=\"sb-logo\"></div>\n    </div>\n</div>","import { Component, OnInit, Input  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from 'sb-shared-lib';\n\n\n\n@Component({\n  selector: 'auth-signin',\n  templateUrl: 'auth.signin.component.html',\n  styleUrls: ['auth.signin.component.scss']\n})\nexport class AuthSigninComponent implements OnInit {\n  public form: FormGroup;\n  public loading:boolean = false;\n  public submitted:boolean = false;\n  public hidepass:boolean = true;\n  public signin_error:boolean = false;\n  public server_error:boolean = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private auth: AuthService,\n      private router: Router\n  ) { \n    this.form = new FormGroup({});\n  }\n\n  // convenience getter for easy access to form fields\n  public get f() { \n    return this.form.controls; \n  }\n\n  public async ngOnInit() {\n    // setup the form\n    this.form = <FormGroup>this.formBuilder.group({\n        username: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],\n        password: ['', Validators.required]\n    });\n\n    this.form.get('username').valueChanges.subscribe( () => {\n        this.submitted = false;\n    });\n\n    this.form.get('password').valueChanges.subscribe( () => {\n      this.submitted = false;\n    });    \n  }\n\n  public async onSubmit() {\n      // prevent sumit for invalid form \n      if (this.form.invalid) {\n          return;\n      }\n      this.signin_error = false;\n      this.server_error = false;      \n      this.submitted = true;\n      this.loading = true;\n\n      try {\n        const data = await this.auth.signIn(this.f.username.value, this.f.password.value);\n        // success: we should be able to authenticate\n        this.auth.authenticate();\n        // AppRootComponent should now redirect to /apps\n      }\n      catch(response:any) {\n        console.log(response);\n\n        try {\n          if(response.hasOwnProperty('status')) {\n            if(response.status == 0) {\n              throw {\n                code: 'server_error',\n                message: 'Server error'\n              };\n            }\n            if(response.hasOwnProperty('error') && response.error.hasOwnProperty('errors')) {\n              let code = Object.keys(response.error['errors'])[0];\n              let msg = response.error['errors'][code];\n              throw {\n                code: code,\n                message: msg\n              };\n            }    \n          }\n          else {\n            throw {\n              code: 'server_error',\n              message: 'Server error'\n            };\n          }\n        }\n        catch(exception:any) {\n            if(exception.code == 'server_error') {\n              this.server_error = true;\n            }\n            else {\n              this.signin_error = true;\n            }          \n        }\n        // there was an error: stop loading indicator\n        this.loading = false;        \n      }\n  }\n\n  public onRecover() {\n    this.router.navigate(['/recover']);\n  }\n\n}","<div class=\"container\">    \n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar><mat-icon>login</mat-icon></div>\n            <mat-card-title>{{'AUTH_SIGNIN_TITLE' | translate}}</mat-card-title>\n            <mat-card-subtitle>{{'AUTH_SIGNIN_SIGNIN' | translate}}</mat-card-subtitle>\n        </mat-card-header>    \n        <mat-card-content>\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-row\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>{{'AUTH_SIGNIN_USERNAME' | translate}}</mat-label>\n                        <input type=\"text\" matInput formControlName=\"username\" />\n                        <mat-error *ngIf=\"f.username.errors\">{{'AUTH_ERROR_MISSING_USERNAME' | translate}}</mat-error>\n                    </mat-form-field>                \n                </div>\n                \n                <div class=\"form-row\">\n                    <mat-form-field appearance=\"fill\" class=\"password\">\n                        <mat-label>{{'AUTH_SIGNIN_PASSWORD' | translate}}</mat-label>\n                        <input [type]=\"(hidepass)?'password':'text'\" matInput formControlName=\"password\" />\n                        <mat-icon matSuffix (click)=\"hidepass = !hidepass\">{{(hidepass)?'visibility_off':'visibility'}}</mat-icon>\n                        <mat-error *ngIf=\"f.password.errors\">{{'AUTH_ERROR_MISSING_PASSWORD' | translate}}</mat-error>\n                    </mat-form-field>                \n                </div>                \n            \n                <div class=\"actions\" >\n                    <button mat-flat-button [class.spinner]=\"loading\"  [disabled]=\"loading\" color=\"primary\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        {{'AUTH_SIGNIN_ACTION_LOGIN' | translate}}\n                    </button>\n                    <!-- <button *ngIf=\"false\" mat-flat-button >Register</button> -->\n                </div>\n\n                <div class=\"messages\" *ngIf=\"submitted && signin_error\">\n                    <div class=\"message\" ><mat-icon>not_interested</mat-icon> <span>{{'AUTH_ERROR_INVALID_USERNAME_OR_PASSWORD' | translate}}</span></div>\n                </div>\n                <div class=\"messages\" *ngIf=\"submitted && server_error\">\n                    <div class=\"message\" ><mat-icon>not_interested</mat-icon> <span>{{'AUTH_ERROR_SERVER_ERROR' | translate}}</span></div>\n                </div>\n\n                <div class=\"options\">\n                    <span class=\"recover\" (click)=\"onRecover()\">{{'AUTH_SIGNIN_ACTION_RECOVER' | translate}}</span>\n                </div>\n\n            </form>\n        </mat-card-content>\n    </mat-card>\n    <div>\n        <div class=\"sb-logo\"></div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}